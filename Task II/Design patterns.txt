Задача: изучить следующий набор паттернов, https://refactoring.guru/ru/design-patterns.
- Порождающие шаблоны проектирования.
- Структурные шаблоны проектирования.
- Поведенческие шаблоны проектирования.

Задача: реализовать паттерн Builder для создание кофе. 
Кофе может состоять из различных компонентов:
1. Кофе.
2. Двойной кофе.
3. Молоко.
4. Сливки.
5. Сахар.
6. Сахар.
7. Корица.
8. Сироп.

Задача: реализовать паттерн Singleton для создания объекта класс солнце.

Задача: реализовать паттерн Factory ля логистической компании, так как у неё есть четыре типа доставки груза.
1. Водным транспортом.
2. Железнодорожным транспортом.
3. Авиатранспортом.
4. Автотранспортом.

Тип доставки зависит от страны, куда необходимо доставить груз.

При этом каждый вид транспорта доставки имеет:
1. Название компании, которая оказывает услугу.
2. Максимальная грузоподъёмность.
3. Максимальный габарит груза.

При этом доставка водным транспортом имеет:
1. Тип - речной или морской.

Доставка железнодорожным транспортом:
1. Размер колеи.
2. Устройство путей - с балластом и без.

Доставка авиатранспортом:
1. Тип - внутригородские, междугородние и международные.
2. Транспорт - пассажирский или грузовой.

Задача: реализовать паттерн Facade для инкапсулирования логики получения данных из различных источников.

UserManager умеет предоставлять данные о пользователе из двух различных источников:
1. ApiManager.
2. CacheManager.

UserManager ищет данные о пользователе:
1. Если в CacheManager есть данные, то возвращает закешированные данные.
2. Если в CacheManager нет данных, то загружает их из ApiManager и сохраняет в CacheManager.

Задача: Реализовать паттерн Observer для прослушивания периодических событий о изменении погоды.

1. Необходимо создать три экрана, которые позволят создать последовательную навигацию от первой к третьей.
2. Создать класс WeatherObserver, который будет существовать в единственном экземпляре.
3. Экран должен подписываться на изменения при открытии, и отписываться при закрытии.
4. Периодические обновление в WeatherObserver реализовать через 5-10 секунд.
5. Алгоритм подсчёта погоды использовать следующий: Int(Date.timeIntervalSinceReferenceDate) % 35.